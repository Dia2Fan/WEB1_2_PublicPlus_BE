plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.5'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'back-end'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.querydsl:querydsl-jpa:5.1.0:jakarta' // QueryDSL JPA 의존성
    annotationProcessor(
            'jakarta.persistence:jakarta.persistence-api',
            'jakarta.annotation:jakarta.annotation-api',
            'com.querydsl:querydsl-apt:5.1.0:jakarta',
            'org.projectlombok:lombok'
    )
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    // Spring JPA

>>>>>>> main
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // Hibernate 6.x, Jakarta Persistence 호환
    implementation 'org.hibernate:hibernate-core:6.0.0.Final'

    // QueryDSL
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.26'
    annotationProcessor 'org.projectlombok:lombok:1.18.26'

    // Database
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    
>>>>>>> main
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'

    // Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'org.mockito:mockito-core:4.6.1'
    implementation 'mysql:mysql-connector-java:8.0.33'

>>>>>>> main
}
tasks.named('test') {
    useJUnitPlatform()
}
tasks.withType(JavaCompile) {
    options.compilerArgs += '-parameters'
}

>>>>>>> main
def querydslDir = "$buildDir/generated/querydsl"
sourceSets {
    main.java.srcDirs += [ querydslDir ]
}
tasks.withType(JavaCompile) {
    options.annotationProcessorGeneratedSourcesDirectory = file(querydslDir)
}
>>>>>>> main
